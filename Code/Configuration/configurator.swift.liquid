//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit

final class {{ module_info.name }}ModuleConfigurator {

    static func initializePresenter() -> {{ module_info.name }}Presenter {
          var view: {{ module_info.name }}ViewProtocol!

          let router ={{ module_info.name }}Router()
          if #available(iOS 13.0.0, *) {
              view = {{ module_info.name }}View()
          } else {
              view =  {{ module_info.name }}ViewController()
          }
        
          let presenter = {{ module_info.name }}Presenter(router: router, view: view)
          let interactor = {{ module_info.name }}Interactor(output:presenter)

          presenter.interactor = interactor
          view.output = presenter
          return presenter
    }

    func configureModuleForViewInput<UIViewController>(viewInput: UIViewController) {

        if let viewController = viewInput as? {{ module_info.name }}ViewController {
            configure(viewController: viewController)
        }
    }

    private func configure(viewController:{{ module_info.name }}ViewController) {
        let router = {{ module_info.name }}Router()
        let presenter = {{ module_info.name }}Presenter(router: router, view: viewController)
        let interactor = {{ module_info.name }}Interactor(output:presenter)

        presenter.interactor = interactor
        viewController.output = presenter
    }

}
